- hostname:
    name: geoapi

# put your authorized key here
#- name: Set authorized key
#  authorized_key:
#    user: root
#    key: "ssh-rsa xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx name@domain"
#    state: present
    
- name: create user
  user: name=geoapi shell=/bin/false

- name: create mongo user
  user: name=mongodb shell=/bin/false create_home=false

- name: copy motd
  copy: src=motd dest=/etc/motd

- name: unpack mongo bins
  unarchive:
    src: mongo_bins.tar.gz
    dest: /usr/bin/
  notify: enable and restart mongo

- name: copy mongo config
  copy: src="mongod.conf" dest=/etc/
  notify: enable and restart mongo

- name: copy mongod.service
  copy: src="mongod.service" dest=/etc/systemd/system
  notify: enable and restart mongo

- name: create mongo logs dir
  file:
    path: /var/log/mongodb
    state: directory
    owner: mongodb
    group: mongodb
  notify: enable and restart mongo

- name: create mongo data dir
  file:
    path: /var/lib/mongodb
    state: directory
    owner: mongodb
    group: mongodb
  notify: enable and restart mongo

  # - name: create dotnet directory
  #   file:
  #     path: /opt/dotnet_runtime
  #     state: directory

    # - name: unpack dotnet_runtime
    #   unarchive:
    #     src: dotnet-runtime-2.2.4-linux-arm.tar.gz
    #     dest: /opt/dotnet_runtime/
    #     owner: root
    #     group: root

- name: unpack service
  unarchive:
    src: "{{ playbook_dir }}/../services/geoapi/publish.tar.gz"
    dest: /home/geoapi/
    owner: geoapi
    group: geoapi
  notify: enable and restart services

- name: fix permissions
  file: name=/home/geoapi owner=geoapi group=geoapi recurse=yes state=directory

#- name: create dotnet link
#  file:
#    src: /opt/dotnet_runtime/dotnet
#    dest: /usr/bin/dotnet
#    state: link

# example of installing packages
#- name: install packages
#  apt: 
#    #update_cache: yes
#    name:
#      - cowsay
  
# - name: copy service
#   copy: src="geoapi.py" dest=/home/geoapi/
#   notify: enable and restart services

# example of reusing the files from services folder
#- name: copy service
#  copy: src="{{ playbook_dir }}/../services/geoapi/geoapi.py" dest=/home/geoapi/
#  notify: enable and restart services

# example of copying dirs with many files
#- name: copy service files
#  synchronize: 
#    src: "{{ playbook_dir }}/../services/geoapi/"
#    dest: /home/geoapi/
#    rsync_opts:
#      - "--chmod=D0770"
#      - "--chmod=F0660"
#      - "--chown=geoapi:geoapi"
#  notify: enable and restart services
#

# - name: make service executable
#   file: path={{item}} mode=0755
#   with_items:
#     - /home/geoapi/geoapi.py
#   notify: enable and restart services

- name: add service files
  copy: src={{ item }}.service dest=/etc/systemd/system/{{ item }}.service
  notify: enable and restart services
  with_items:
    - geoapi

